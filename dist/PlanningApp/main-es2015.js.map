{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/header/header.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/recipes/recipes.component.html","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routin.module.ts","./src/app/header/header.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.css","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.css","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-list.component.css","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-start/recipe-start.component.css","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/recipes/recipe.model.ts","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipes.component.css","./src/app/recipes/recipes.component.ts","./src/app/shared/dropdown.directive.ts","./src/app/shared/ingredient.model.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.css","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-list.component.css","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,qP;;;;;;;;;;;ACAA,uyC;;;;;;;;;;;ACAA,0NAA0N,aAAa,2uBAA2uB,qBAAqB,uMAAuM,iBAAiB,KAAK,mBAAmB,iD;;;;;;;;;;;ACAvtC,8C;;;;;;;;;;;ACAA,iNAAiN,aAAa,+CAA+C,qBAAqB,gFAAgF,kBAAkB,+EAA+E,2B;;;;;;;;;;;ACAnd,mbAAmb,cAAc,gF;;;;;;;;;;;ACAjc,uD;;;;;;;;;;;ACAA,kU;;;;;;;;;;;ACAA,w2B;;;;;;;;;;;ACAA,2YAA2Y,iBAAiB,IAAI,mBAAmB,oB;;;;;;;;;;;ACAnb,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;QACtB,kBAAa,GAAG,QAAQ,CAAC;IAI3B,CAAC;IAHC,UAAU,CAAC,OAAe;QACxB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;IAC/B,CAAC;CACF;AANY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uIAAmC;;KAEpC,CAAC;GACW,YAAY,CAMxB;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACW;AACK;AACmB;AACM;AACM;AACd;AACc;AAC9B;AACU;AAC/B;AACS;AAC+B;AACH;AA0BhF,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAxBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,wEAAe;YACf,2EAAgB;YAChB,8FAAmB;YACnB,oGAAqB;YACrB,0GAAmB;YACnB,4FAAqB;YACrB,2GAAqB;YACrB,6EAAiB;YACjB,kGAAoB;YACpB,+FAAmB;SACpB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,2DAAW;YACX,mEAAe;SAChB;QACD,SAAS,EAAE;YACT,yFAAmB;SACpB;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AC1CiB;AACc;AACQ;AACiB;AACK;AACG;AACN;AAEhF,MAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAC;IACrD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE,QAAQ,EAAE;YACrD,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iGAAoB,EAAC;YAC3C,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,8FAAmB,EAAC;YAC7C,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,oGAAqB,EAAC;YAC/C,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,8FAAmB,EAAC;SAClD,EAAC;IACJ,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB,EAAC;CAC1D;AAKD,IAAa,eAAe,GAA5B,MAAa,eAAe;CAE3B;AAFY,eAAe;IAJ3B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC1C,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,eAAe,CAE3B;AAF2B;;;;;;;;;;;;;;;;;;ACtBkC;AAM9D,IAAc,eAAe,GAA7B,MAAc,eAAe;CAC5B;AADa,eAAe;IAJ5B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,oJAAuC;KACxC,CAAC;GACY,eAAe,CAC5B;AAD4B;;;;;;;;;;;;ACN7B,+DAA+D,2K;;;;;;;;;;;;;;;;;;;ACAR;AAEP;AACO;AAOvD,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAGhC,YAAoB,aAA4B,EAAU,KAAqB;QAA3D,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAEpF,QAAQ;QACN,4BAA4B;QAC5B,4CAA4C;QAC5C,kDAAkD;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAC7C,IAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,6BAA6B;YACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC3E,CAAC;CAEF;;YAhBoC,6DAAa;YAAiB,8DAAc;;AAHpE,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,iLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAmBjC;AAnBiC;;;;;;;;;;;;ACVlC,+DAA+D,mK;;;;;;;;;;;;;;;;;;ACAb;AACK;AAOvD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QADzC,aAAQ,GAAG,KAAK,CAAC;IAC4B,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAC7C,IAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAV4B,8DAAc;;AAH9B,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,2KAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAa/B;AAb+B;;;;;;;;;;;;ACRhC,+DAA+D,mL;;;;;;;;;;;;;;;;;;ACAc;AAE1B;AAOnD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,gFAAgF;IAChF,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;IACR,CAAC;CAOF;;YAVoC,6DAAa;;AAHvC;IAAR,2DAAK,EAAE;mDAAgB;AACf;IAAR,2DAAK,EAAE;kDAAe;AAFZ,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,uLAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAc/B;AAd+B;;;;;;;;;;;;ACThC,+DAA+D,mK;;;;;;;;;;;;;;;;;;ACAO;AAEtB;AAOhD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,0BAA0B;IAC1B,wBAAwB;IACxB,gBAAgB;IAChB,uBAAuB;IACvB,gCAAgC;IAChC,gHAAgH;IAChH,OAAO;IACP,gBAAgB;IAChB,6BAA6B;IAC7B,gCAAgC;IAChC,gHAAgH;IAChH,OAAO;IACP,KAAK;IACL,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IAClD,CAAC;CAMF;;YAVoC,6DAAa;;AAhBrC,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,2KAA2C;;KAE5C,CAAC;GACW,mBAAmB,CA0B/B;AA1B+B;;;;;;;;;;;;ACThC,+DAA+D,uK;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,8KAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAOhC;AAPgC;;;;;;;;;;;;;ACLjC;AAAA;AAAO,MAAM,MAAM;IAKjB,YAAY,IAAY,EAAE,IAAY,EAAE,SAAiB,EAAE,WAAyB;QAClF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZmC;AACiB;AACD;AACqB;AAG3E,IAAa,aAAa,GAA1B,MAAa,aAAa;IAsBxB,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;QArBlD,mBAAc,GAAG,IAAI,0DAAY,EAAU,CAAC;QACpC,YAAO,GAAa;YAC1B,IAAI,oDAAM,CACR,eAAe,EACf,8BAA8B,EAC9B,yGAAyG,EACzG;gBACE,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzB,IAAI,mEAAU,CAAC,cAAc,EAAE,EAAE,CAAC;aACnC,CACF;YACD,IAAI,oDAAM,CACR,qBAAqB,EACrB,8BAA8B,EAC9B,yGAAyG,EACzG;gBACE,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzB,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;aAC1B,CACF;SACF,CAAC;IACmD,CAAC;IAEtD,WAAW;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,4BAA4B,CAAC,WAAyB;QACpD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IACD,SAAS,CAAC,KAAa;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;CACF;;YAZgC,wFAAmB;;AAtBvC,aAAa;IADzB,gEAAU,EAAE;GACA,aAAa,CAkCzB;AAlCyB;;;;;;;;;;;;ACN1B,+DAA+D,+I;;;;;;;;;;;;;;;;;;ACAb;AAEH;AAQ/C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CACzC,CAAC,MAAc,EAAE,EAAE;YACjB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC/B,CAAC,CACF,CAAC;IACJ,CAAC;CAEF;;YAVoC,6DAAa;;AAFrC,gBAAgB;IAN5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,uJAAuC;QAEvC,SAAS,EAAE,CAAC,6DAAa,CAAC;;KAC3B,CAAC;GACW,gBAAgB,CAY5B;AAZ4B;;;;;;;;;;;;;;;;;;ACVa;AAK1C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;CAElB;AAJY,iBAAiB;IAH7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;KAC1B,CAAC;GACW,iBAAiB,CAI7B;AAJ6B;;;;;;;;;;;;;ACL9B;AAAA;AAAO,MAAM,UAAU;IAErB,YAAmB,IAAY,EAAU,MAAc;QAApC,SAAI,GAAJ,IAAI,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;;;;;;;;;;;;;;;;;ACF7D,+DAA+D,mL;;;;;;;;;;;;;;;;;;;ACA8B;AACpC;AACI;AAO7D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAGhC,sFAAsF;IACtF,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;IAAI,CAAC;IAEvD,QAAQ;IACR,CAAC;IACD,SAAS;QACP,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;QACtD,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC;QAC3D,MAAO,aAAa,GAAG,IAAI,mEAAU,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC1D,oEAAoE;QACpE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IAE9C,CAAC;CACF;;YAZgC,0EAAmB;;AAHV;IAAvC,+DAAS,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;2DAA0B;AACvB;IAAzC,+DAAS,CAAC,aAAa,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;8DAA6B;AAF3D,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,uLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAgBjC;AAhBiC;;;;;;;;;;;;ACTlC,+DAA+D,+J;;;;;;;;;;;;;;;;;;ACAb;AAEU;AAO5D,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAEhC,gCAAgC;IAChC,oBAAoB;IACpB,gBAAgB;IAChB,QAAQ;IACR,OAAO;IACP,oBAAoB;IACpB,kBAAkB;IAClB,SAAS;IACT,MAAM;IACN,KAAK;IACL,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;IAAI,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,SAAS,CACzC,CAAC,UAAwB,EAAE,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAChC,CAAC,CACF,CAAC;IACJ,CAAC;CAMF;;YAfgC,0EAAmB;;AAZvC,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,yKAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA2BjC;AA3BiC;;;;;;;;;;;;;ACTlC;AAAA;AAAA;AAAA;AAAsD;AACX;AAEpC,MAAM,mBAAmB;IAAhC;QACE,uBAAkB,GAAG,IAAI,0DAAY,EAAgB;QAC7C,gBAAW,GAAiB;YAClC,IAAI,mEAAU,CACZ,QAAQ,EACR,CAAC,CACF;YACD,IAAI,mEAAU,CACZ,UAAU,EACV,EAAE,CACH;SACF,CAAC;IAgBJ,CAAC;IAfC,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IACD,aAAa,CAAC,UAAsB;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,cAAc,CAAC,WAA0B;QACvC,wCAAwC;QACxC,oCAAoC;QACpC,IAAI;QACJ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IACzD,CAAC;CACF;;;;;;;;;;;;;AC9BD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header (featureselected)=\\\"onNavigate($event)\\\"></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","module.exports = \"\\r\\n\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Recipe Book</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recipes\\\">Recipes <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/shopping-list\\\">Shopping List</a>\\r\\n      </li>\\r\\n      <div class=\\\"dropdown\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n         Manage\\r\\n        </button>\\r\\n        <div class=\\\"dropdown-menu\\\">\\r\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer\\\">Save Data</a>\\r\\n          <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer\\\">Fetch Data</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <img [src]=\\\"recipe.imagePath\\\" class=\\\"img-fluid\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h1>{{recipe.name}}</h1>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n    <div class=\\\"dropdown show\\\">\\r\\n      <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        Manage Recipe\\r\\n      </button>\\r\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer\\\">To Shopping List</a>\\r\\n        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer\\\" >Edit Recipe</a>\\r\\n        <a class=\\\"dropdown-item\\\" style=\\\"cursor: pointer\\\" >Delete Recipe</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    {{recipe.descriptoion}}\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of recipe.ingredients\\\">{{ingredient.name}} - {{ingredient.amount}}</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<p>recipe-edit works!</p>\\n\"","module.exports = \"<a style=\\\"cursor: pointer\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item clearfix\\\" [routerLink]=\\\"index\\\">\\n  <div class=\\\"float-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{recipe.name}}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{recipe.descriptoion}}</p>\\n  </div>\\n  <span class=\\\"float-right\\\">\\n        <img\\n          src=\\\"{{recipe.imagePath}}\\\"\\n          alt=\\\"\\\" class=\\\"img-fluid\\\"\\n          style=\\\"max-height: 70px;\\\">\\n      </span>\\n</a>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <button class=\\\"btn btn-success\\\">New Recipe</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n<!--    <app-recipe-item *ngFor=\\\"let recipeEl of recipes\\\" [recipe]=\\\"recipeEl\\\" (recipeSelected)=\\\"onRecipeSelected(recipeEl)\\\"></app-recipe-item> ** if don't use service   -->\\n    <app-recipe-item *ngFor=\\\"let recipeEl of recipes; let i =index;\\\" [recipe]=\\\"recipeEl\\\" [index]=\\\"i\\\"></app-recipe-item>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"<h3>Please select a Recipe!</h3>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n<!--    <app-recipe-list (recipeWasSelected)=\\\"selectedRecipe = $event\\\"></app-recipe-list> **if don't use service -->\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <form>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-5 form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" #nameInput>\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"amount\\\">Amount</label>\\n          <input type=\\\"number\\\" id=\\\"amount\\\" class=\\\"form-control\\\" #amountInput>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"onAddItem()\\\">Add</button>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\">Delete</button>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"reset\\\">Clear</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-10\\\">\\n<!--    <app-shopping-edit (ingredientAdded)=\\\"onIngredientAdded($event)\\\"></app-shopping-edit> **if don't use service -->\\n    <app-shopping-edit></app-shopping-edit>\\n  </div>\\n</div>\\n<hr>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" style=\\\"cursor: pointer\\\" *ngFor=\\\"let ingredient of ingredients\\\">\\n    {{ingredient.name}} ({{ingredient.amount}})\\n  </li>\\n</ul>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PlanningApp';\n  loadedFeature = 'recipe';\n  onNavigate(feature: string) {\n    this.loadedFeature = feature;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {HeaderComponent} from './header/header.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\nimport { DropdownDirective } from './shared/dropdown.directive';\nimport {ShoppingListService} from './shopping-list/shopping-list.service';\nimport {FormsModule} from '@angular/forms';\nimport {AppRoutinModule} from './app.routin.module';\nimport {RecipeStartComponent} from './recipes/recipe-start/recipe-start.component';\nimport {RecipeEditComponent} from './recipes/recipe-edit/recipe-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    DropdownDirective,\n    RecipeStartComponent,\n    RecipeEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutinModule\n  ],\n  providers: [\n    ShoppingListService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RecipesComponent} from './recipes/recipes.component';\r\nimport {ShoppingListComponent} from './shopping-list/shopping-list.component';\r\nimport {RecipeStartComponent} from './recipes/recipe-start/recipe-start.component';\r\nimport {RecipeDetailComponent} from './recipes/recipe-detail/recipe-detail.component';\r\nimport {RecipeEditComponent} from './recipes/recipe-edit/recipe-edit.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', redirectTo: '/recipes', pathMatch: 'full'},\r\n  {path: 'recipes', component: RecipesComponent, children: [\r\n      {path: '', component: RecipeStartComponent},\r\n      {path: 'new', component: RecipeEditComponent},\r\n      {path: ':id', component: RecipeDetailComponent},\r\n      {path: 'id/edit', component: RecipeEditComponent},\r\n    ]},\r\n  {path: 'shopping-list', component: ShoppingListComponent},\r\n]\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutinModule {\r\n\r\n}\r\n","import {Component, EventEmitter, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl : './header.component.html'\r\n})\r\nexport class  HeaderComponent {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWRldGFpbC9yZWNpcGUtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Recipe} from '../recipe.model';\nimport {RecipeService} from '../recipe.service';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n  constructor(private recipeService: RecipeService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // ** if don't use subscribe\n    // const id = this.route.snapshot.params.id;\n    // this.recipe = this.recipeService.getRecipe(id);\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id']; // + use to convert to number\n      this.recipe = this.recipeService.getRecipe(this.id);\n    });\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredientstoShoppingList(this.recipe.ingredients);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWVkaXQvcmVjaXBlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      console.log(this.editMode);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWl0ZW0vcmVjaXBlLWl0ZW0uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Recipe} from '../../recipe.model';\nimport {RecipeService} from '../../recipe.service';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n  // @Output() recipeSelected = new EventEmitter<void>();  ** if don't use service\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit() {\n  }\n\n  // onSelected() {\n  //   // this.recipeSelected.emit(); /// if use output\n  //   this.recipeService.recipeSelected.emit(this.recipe);\n  // }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Recipe} from '../recipe.model';\nimport {RecipeService} from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\n  // @Output() recipeWasSelected = new EventEmitter<Recipe>(); **if don't use service\n  recipes: Recipe[];\n  ////////// move to service\n  // recipes: Recipe[] = [\n  //   new Recipe(\n  //     'A Test Recipe',\n  //     'This is simply a test' ,\n  //     'https://www.seriouseats.com/2019/07/20190618-grilled-turkish-chicken-wings-vicky-wasik-13-1500x1125.jpg'\n  //   ),\n  //   new Recipe(\n  //     'Another Test Recipe',\n  //     'This is simply a test' ,\n  //     'https://www.seriouseats.com/2019/07/20190618-grilled-turkish-chicken-wings-vicky-wasik-13-1500x1125.jpg'\n  //   ),\n  // ];\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit() {\n    this.recipes = this.recipeService.getRecipres();\n  }\n  // if don't use service\n  // onRecipeSelected(recipe: Recipe) {\n  //   this.recipeWasSelected.emit(recipe);\n  // }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLXN0YXJ0L3JlY2lwZS1zdGFydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Ingredient} from '../shared/ingredient.model';\r\n\r\nexport class Recipe {\r\n  public name: string;\r\n  public descriptoion: string;\r\n  public  imagePath: string;\r\n  public ingredients: Ingredient[];\r\n  constructor(name: string, desc: string, imagePath: string, ingredients: Ingredient[]) {\r\n    this.name = name;\r\n    this.descriptoion = desc;\r\n    this.imagePath = imagePath;\r\n    this.ingredients = ingredients;\r\n  }\r\n}\r\n","import {Recipe} from './recipe.model';\r\nimport {EventEmitter, Injectable} from '@angular/core';\r\nimport {Ingredient} from '../shared/ingredient.model';\r\nimport {ShoppingListService} from '../shopping-list/shopping-list.service';\r\n\r\n@Injectable()\r\nexport class RecipeService {\r\n  recipeSelected = new EventEmitter<Recipe>();\r\n  private recipes: Recipe[] = [\r\n    new Recipe(\r\n      'A Test Recipe',\r\n      'What else you need to say ? ' ,\r\n      'https://www.seriouseats.com/2019/07/20190618-grilled-turkish-chicken-wings-vicky-wasik-13-1500x1125.jpg',\r\n      [\r\n        new Ingredient('Meat', 1),\r\n        new Ingredient('French Fries', 20),\r\n      ]\r\n    ),\r\n    new Recipe(\r\n      'Another Test Recipe',\r\n      'What else you need to say ? ' ,\r\n      'https://www.seriouseats.com/2019/07/20190618-grilled-turkish-chicken-wings-vicky-wasik-13-1500x1125.jpg',\r\n      [\r\n        new Ingredient('Buns', 2),\r\n        new Ingredient('Meat', 1),\r\n      ]\r\n    ),\r\n  ];\r\n  constructor(private slService: ShoppingListService) {}\r\n\r\n  getRecipres() {\r\n    return this.recipes.slice();\r\n  }\r\n\r\n  addIngredientstoShoppingList(ingredients: Ingredient[]) {\r\n    this.slService.addIngredients(ingredients);\r\n  }\r\n  getRecipe(index: number) {\r\n    return this.recipes[index];\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {Recipe} from './recipe.model';\nimport {RecipeService} from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n  providers: [RecipeService]\n})\nexport class RecipesComponent implements OnInit {\n  selectedRecipe: Recipe;\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit() {\n    this.recipeService.recipeSelected.subscribe(\n      (recipe: Recipe) => {\n        this.selectedRecipe = recipe;\n      }\n    );\n  }\n\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n\n  constructor() { }\n\n}\n","export class Ingredient {\r\n\r\n  constructor(public name: string , public amount: number) {}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3BwaW5nLWxpc3Qvc2hvcHBpbmctZWRpdC9zaG9wcGluZy1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, ElementRef, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {Ingredient} from '../../shared/ingredient.model';\nimport {ShoppingListService} from '../shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit {\n  @ViewChild('nameInput', {static: true}) nameInputRef: ElementRef;\n  @ViewChild('amountInput', {static: true}) amountInmputRef: ElementRef;\n  // @Output() ingredientAdded = new EventEmitter<Ingredient>(); ** if don't use service\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit() {\n  }\n  onAddItem() {\n    const ingName = this.nameInputRef.nativeElement.value;\n    const ingAmount = this.amountInmputRef.nativeElement.value;\n    const  newIngredient = new Ingredient(ingName, ingAmount);\n    // this.ingredientAdded.emit(newIngredient); ** if don't use service\n    this.slService.addIngredient(newIngredient);\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3BwaW5nLWxpc3Qvc2hvcHBpbmctbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {Ingredient} from '../shared/ingredient.model';\nimport {ShoppingListService} from './shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit {\n  ingredients: Ingredient[];\n  // ingredients: Ingredient[] = [\n  //   new Ingredient(\n  //     'Apples',\n  //     5\n  //   ),\n  //   new Ingredient(\n  //     'Tomatoes',\n  //     10\n  //   )\n  // ];\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit() {\n    this.ingredients = this.slService.getIngredients();\n    this.slService.ingredientsChanged.subscribe(\n      (ingrdients: Ingredient[]) => {\n        this.ingredients = ingrdients;\n      }\n    );\n  }\n  // if don't use service\n  // onIngredientAdded(ingredient: Ingredient) {\n  //   this.ingredients.push(ingredient);\n  // }\n\n}\n","import {Ingredient} from '../shared/ingredient.model';\r\nimport {EventEmitter} from '@angular/core';\r\n\r\nexport class ShoppingListService {\r\n  ingredientsChanged = new EventEmitter<Ingredient[]>()\r\n  private ingredients: Ingredient[] = [\r\n    new Ingredient(\r\n      'Apples',\r\n      5\r\n    ),\r\n    new Ingredient(\r\n      'Tomatoes',\r\n      10\r\n    )\r\n  ];\r\n  getIngredients() {\r\n    return this.ingredients.slice();\r\n  }\r\n  addIngredient(ingredient: Ingredient) {\r\n    this.ingredients.push(ingredient);\r\n    this.ingredientsChanged.emit(this.ingredients.slice());\r\n  }\r\n\r\n  addIngredients(ingredients: Ingredient []) {\r\n    // for (let ingredient of ingredients) {\r\n    //   this.addIngredient(ingredient);\r\n    // }\r\n    this.ingredients.push(...ingredients);\r\n    this.ingredientsChanged.emit(this.ingredients.slice());\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}